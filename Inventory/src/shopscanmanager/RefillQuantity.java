/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package shopscanmanager;

import java.awt.Frame;
import java.io.*;
import java.nio.charset.Charset;
import java.security.MessageDigest;
import java.sql.*;
import java.util.Hashtable;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
import org.apache.commons.codec.binary.Hex;

/**
 *
 * @author xkalibaer
 */
public class RefillQuantity extends javax.swing.JPanel {

    /**
     * Creates new form RefillQuantity
     */
    
    private Connection con;
    private Mysql mysql;
    private AppAccess appAccess;
    private HomeScreen hs;
    
    public RefillQuantity(Connection con, Mysql mysql, AppAccess appAccess, HomeScreen hs) {
        this.hs=hs;
        try {
            initComponents();
            this.con=con;
            this.mysql=mysql;
            this.appAccess=appAccess;
            PreparedStatement pr = this.con.prepareStatement("SELECT * from shop_items WHERE status = ?");
            pr.setInt(1, 1);
            ResultSet rs=mysql.query(pr);
            jComboBox3.removeAllItems();
            this.jComboBox3.addItem("-Select An Item-");
            String comboItem;
            while (rs.next()) { 
                comboItem=rs.getString("title").toString();
                if(comboItem.length()>30)
                {
                    comboItem=comboItem.substring(0, 30) + "...";
                }
                this.jComboBox3.addItem(comboItem);
            }
        } catch (SQLException ex) {
            Logger.getLogger(RefillQuantity.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel55 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jComboBox3 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jPanel2.setBackground(new java.awt.Color(42, 42, 42));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel55.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jLabel55.setForeground(new java.awt.Color(204, 204, 204));
        jLabel55.setText("Refill Your Shop Item Quantity");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel55)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel55))
        );

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("Shop Item:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("Add Quantity:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(204, 204, 204));
        jLabel8.setText("Extra Details/Info:");

        jButton1.setText("Add Quantity");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel8)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jButton1)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(480, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 842, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1150, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Hashtable h1 = RefillQuantity.this.refillProcess(RefillQuantity.this.con, RefillQuantity.this.mysql);
        //Frame[] f = HomeScreen.getFrames();
        

        //for (int count5 = 0; count5 < f.length; count5++) {
            //System.out.println(f[count5].toString());
            //HomeScreen h = ((HomeScreen) f[count5]);

            this.hs.displayProcessMessage(h1);
        //}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

    public Hashtable refillProcess(Connection con, Mysql mysql) {
        Hashtable h1=new Hashtable();
        Hashtable processResult=new Hashtable();
        try
        {
            int shopItem=this.jComboBox3.getSelectedIndex();
            int quantity=Integer.parseInt(this.jTextField2.getText().toString().trim());
            String details=this.jTextArea1.getText().toString().trim();

            
            System.out.println("Add/Edit new item1");
        
        
        
            if(shopItem>0)
            {
                if(quantity>0)
                {
                    System.out.println("Add/Edit new item3");
                    
                        
                    PreparedStatement pr;

                    try 
                    {
                        System.out.println("Add/Edit new item4");
                        //insert operation

                        System.out.println("Inserrt Process");


                        String uniqId=UUID.randomUUID().toString();
                        pr=con.prepareStatement("INSERT INTO quantity (`id`, `shopItemId`, `quantity`, `dateRefilled`, `userId`, `status`) VALUES "
                                + "(null, (SELECT `id` FROM shop_items WHERE `status` = 1 LIMIT ?, 1), ?, NOW(), (SELECT `id` FROM user_profile where `key` = ?), ?)", Statement.RETURN_GENERATED_KEYS);

                        pr.setInt(1, (shopItem - 1));
                        pr.setInt(2, quantity);
                        pr.setString(3, this.appAccess.getAccessKey());
                        pr.setInt(4, 1);


                        int shopItemCount=0;
                        pr.executeUpdate();

                        ResultSet res = pr.getGeneratedKeys();
                        System.out.println(res.getStatement().toString());

        //                    System.out.println(res.getMetaData().getColumnName(0));
                        if (res.next()){
                            shopItemCount=res.getInt(1);}
                        System.out.println("Insert Id = " + shopItemCount);
                        if(shopItemCount>0)
                        {
                            processResult.put("success", true);
                            processResult.put("message", "Quantity Refill Successful");
                            processResult.put("operation", "Shop Item Refill...");
                        }
                        else
                        {
                            processResult.put("success", false);
                            processResult.put("message", "Process failed. Provide a valid number for the quantity");
                            processResult.put("operation", "Shop Item Refill...");
                        }

                    }           
                    catch (SQLException ex) 
                    {
                                processResult.put("success", false);
                                processResult.put("message", "Process failed. Try again");
                                processResult.put("operation", "Shop Item Refill...");
                                Logger.getLogger(RefillQuantity.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    catch(UnsupportedOperationException ex)
                    {
                        processResult.put("success", false);
                        processResult.put("message", "Process failed. Try again");
                        processResult.put("operation", "Shop Item Refill...");
                    }
                    catch (NumberFormatException ex)
                    {
                        processResult.put("success", false);
                        processResult.put("message", "Process failed. Provide a valid number for the quantity");
                        processResult.put("operation", "Shop Item Refill...");
                    }
                }
                else
                {
                    processResult.put("success", false);
                    processResult.put("message", "Process failed. Provide a valid number for the quantity. Quantity should be greater than 0. Try again");
                    processResult.put("operation", "Shop Item Refill...");
                }
            }
            else
            {
                processResult.put("success", false);
                processResult.put("message", "Process failed. Select a shop item first. Try again");
                processResult.put("operation", "Shop Item Refill...");
            }
        }
        catch (Exception ex)
        {
            processResult.put("success", false);
            processResult.put("message", "Process failed. Try again");
            processResult.put("operation", "Shop Item Refill...");
        }
        return processResult;
    }
    
    
    
    public JPanel getAllComponents()
    {
        HeaderPanel header=new HeaderPanel();
        
        BoxLayoutType bxt=new BoxLayoutType(BoxLayoutType.VERTICAL, 0, 20);
        this.setLayout(bxt);
        this.setBackground(new java.awt.Color(23, 21, 21));
        this.jPanel1.setBackground(new java.awt.Color(23, 21, 21));
        this.jPanel2.setBackground(new java.awt.Color(23, 21, 21));
        this.jPanel3.setBackground(new java.awt.Color(23, 21, 21));
        this.add(header.getAllComponents(this.con, this.mysql, "C:/wamp/www/scanshoplocal/"), 0);
        return this;
    }
}



