/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package shopscanmanager;

import java.awt.Frame;
import java.io.*;
import java.nio.charset.Charset;
import java.nio.file.FileAlreadyExistsException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.*;
import java.util.Hashtable;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JPanel;
import javax.swing.filechooser.FileFilter;
import net.glxn.qrgen.QRCode;
import net.glxn.qrgen.image.ImageType;
import org.apache.commons.codec.binary.Hex;
import org.json.simple.JSONObject;

/**
 *
 * @author xkalibaer
 */
public class NewUser extends javax.swing.JPanel {
    private final Connection con;
    private final Mysql mysql;
    private final AppAccess appAccess;
    private String fileSelectedPath;
    private File fileSelected;
    private JSONObject editDetails;
    private HomeScreen hs;
    private String savePath;

    /**
     * Creates new form NewUser
     */
    public NewUser(Connection con, Mysql mysql, AppAccess appAccess, HomeScreen hs, String savePath) {
        this.hs=hs;
        this.con=con;
        this.mysql=mysql;
        this.appAccess=appAccess;
        this.savePath=savePath;
        initComponents();
    }
    
    
    public JPanel getAllComponents()
    {
        HeaderPanel header=new HeaderPanel();
        
        BoxLayoutType bxt=new BoxLayoutType(BoxLayoutType.VERTICAL, 0, 20);
        this.setLayout(bxt);
        this.setBackground(new java.awt.Color(23, 21, 21));
        this.jPanel1.setBackground(new java.awt.Color(23, 21, 21));
        this.jPanel2.setBackground(new java.awt.Color(23, 21, 21));
        this.jPanel3.setBackground(new java.awt.Color(23, 21, 21));
        //this.add(header.getAllComponents(this.con, this.mysql, "C:/wamp/www/scanshoplocal/"), 0);
        this.add(header.getAllComponents(this.con, this.mysql, this.savePath), 0);
        return this;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel55 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jPasswordField2 = new javax.swing.JPasswordField();
        jLabel12 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jPanel2.setBackground(new java.awt.Color(42, 42, 42));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel55.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jLabel55.setForeground(new java.awt.Color(204, 204, 204));
        jLabel55.setText("Create A New Account");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel55)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel55))
        );

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("First Name:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("Last Name:");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setText("Other Name:");

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 204, 204));
        jLabel4.setText("Type of User:");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 204, 204));
        jLabel5.setText("Mobile Number:");

        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(204, 204, 204));
        jLabel8.setText("Sex:");

        jButton2.setText("Select User Passport");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 204, 204));
        jLabel6.setText("Staff Identification Number:");

        jButton1.setText("Create User Account");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(204, 204, 204));
        jLabel7.setText("Security Question:");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(204, 204, 204));
        jLabel9.setText("Answer:");

        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(204, 204, 204));
        jLabel10.setText("Email Address:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(204, 204, 204));
        jLabel11.setText("Password:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(204, 204, 204));
        jLabel12.setText("Confirm Password:");

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(204, 204, 204));
        jLabel13.setText("Login Details");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel7)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jButton1)
                            .addComponent(jLabel12)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jTextField4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                                .addComponent(jTextField8, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jPasswordField2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jTextField7)
                                .addComponent(jTextField5, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel6)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jComboBox4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                                        .addComponent(jPasswordField1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)))))
                        .addContainerGap(420, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2)
                            .addComponent(jLabel13))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(41, 41, 41)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPasswordField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(106, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(480, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 122, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1118, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1082, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField8ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
                    
        FileFilter filter1 = new ExtensionFileFilter("JPG and JPEG and PNG", new String[] { "JPG", "JPEG", "PNG" });
        chooser.setFileFilter(filter1);
        int returnVal = chooser.showOpenDialog(NewUser.this.jButton2);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            try {
                System.out.println("You chose to open this file: " +
                    chooser.getSelectedFile().getName() + "" + chooser.getSelectedFile().getCanonicalPath()
                        + "" + chooser.getSelectedFile().getPath());
                NewUser.this.fileSelectedPath=chooser.getSelectedFile().getCanonicalPath();
                NewUser.this.fileSelected=chooser.getSelectedFile();
            } catch (IOException ex) {
                Logger.getLogger(AddNewItem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    
    public Hashtable addNewUserProcess(Connection con, Mysql mysql, AppAccess appAccess, String savePath)
    {
        String firstName=this.jTextField1.getText().toString();
        String lastName=this.jTextField2.getText().toString();
        String otherName=this.jTextField3.getText().toString();
        String mobile=this.jTextField4.getText().toString();
        int userType=this.jComboBox2.getSelectedIndex();
        int sex=this.jComboBox4.getSelectedIndex();
        //System.out.println(this.jTextField3.getText().toString());
        String staffId=this.jTextField7.getText().toString();
        int securityQuestion=this.jComboBox3.getSelectedIndex();
        String securityAnswer=this.jTextField8.getText().toString();
        String email=this.jTextField4.getText().toString();
        char[] password=this.jPasswordField1.getPassword();
        char[] cpassword=this.jPasswordField2.getPassword();
        String uniqIdImage;
        
        Hashtable processResult=new Hashtable();
        System.out.println("Add/Edit new item1");
        
        if(userType>0)
        {
            System.out.println("Add/Edit new item2");
            if(sex>0)
            {
                if(firstName.length()>0)
                {
                    if(lastName.length()>0)
                    {
                        if(mobile.length()>0)
                        {
                            if(email.length()>0)
                            {
                                if(password.length>0)
                                {
                                    if(cpassword.length>0)
                                    {
                                        if(new UtilUse().comparePasswords(password, cpassword))
                                        {
                                            if(securityAnswer.length()>0)
                                            {
                                                if(securityQuestion>0)
                                                {
            PreparedStatement pr;
            String qr_code="";
            try {
                System.out.println("Add/Edit new item4");
                //insert operation
                if(this.editDetails==null)
                {
                    System.out.println("Inserrt Process");
                    int fileId=-1;
                    if(fileSelectedPath!=null)
                    {
                        uniqIdImage=UUID.randomUUID().toString();
                        try {
                            FileInputStream fileInputStream=new FileInputStream(new File(fileSelectedPath));
                            byte[] buffer = new byte[fileInputStream.available()];
                            int bytesRead = fileInputStream.read(buffer, 0, fileInputStream.available());
                            int bytesAvailable;
                            int maxBufferSize=2*1048576;
                            FileOutputStream fileOutputsteam=new FileOutputStream(new File(savePath + "\\user\\" + uniqIdImage));

                            int count=0;
                            while (bytesRead > 0) {
                                fileOutputsteam.write(buffer, count++, 1);
                                bytesRead--;
                            }
                            fileInputStream.close();
                            fileOutputsteam.flush();
                            fileOutputsteam.close();
                        } catch (FileNotFoundException ex) {
                            Logger.getLogger(AddNewItem.class.getName()).log(Level.SEVERE, null, ex);
                            processResult.put("success", false);
                            processResult.put("message", "Process failed. Try again");
                            processResult.put("operation", "Create/Update User Account...");
                        }
                        catch (IOException ex)
                        {
                            Logger.getLogger(AddNewItem.class.getName()).log(Level.SEVERE, null, ex);
                            processResult.put("success", false);
                            processResult.put("message", "Process failed. Try again");
                            processResult.put("operation", "Create/Update User Account...");
                        }

                        System.out.println("appAccess.getAccessKey()=" + appAccess.getAccessKey());
                        pr=con.prepareStatement("INSERT INTO files (`unique_id`, `fileName`, `source_id`, `dateUploaded`, `status`, `receipient_id`) VALUES "
                                + "(?, ?, (SELECT `id` FROM user_profile where `key` = ?), NOW(), ?, "
                                + "(SELECT `id` FROM user_profile where `key` = ?))", Statement.RETURN_GENERATED_KEYS);

                        pr.setString(1, uniqIdImage);
                        pr.setString(2, fileSelected.getName());
                        pr.setString(3, appAccess.getAccessKey());
                        pr.setInt(4, 1);
                        pr.setString(5, appAccess.getAccessKey());
                        int addCount = pr.executeUpdate();

                        ResultSet res = pr.getGeneratedKeys();
                        while (res.next()){
                            fileId=(int)res.getInt(1);}
                    }

                    if(fileId==-1)
                    {
                        pr=con.prepareStatement("INSERT INTO user_profile (`id`, `first_name`, `last_name`, `other_name`, "
                                + "`email_address`, `mobile_number`, `password`, `securityQuestionId`, "
                                + "`securityQuestionAnswer`, `date_created`, `key`, `nhsNumber`, `userTypeId`) VALUES "
                            + "(null, ?, ?, ?, ?, ?, ?, ?, ?, NOW(), ?, ?, (SELECT `id` FROM user_type WHERE "
                                + "`usertype` = 'Administrator'))", Statement.RETURN_GENERATED_KEYS);
                    }
                    else
                    {
                        pr=con.prepareStatement("INSERT INTO user_profile (`id`, `first_name`, `last_name`, `other_name`, "
                                + "`email_address`, `mobile_number`, `password`, `securityQuestionId`, "
                                + "`securityQuestionAnswer`, `date_created`, `key`, `nhsNumber`, `userTypeId`, `fileId`) VALUES "
                            + "(null, ?, ?, ?, ?, ?, ?, ?, ?, NOW(), ?, ?, ?, ?)", Statement.RETURN_GENERATED_KEYS);
                    }
                    MessageDigest messageDigest;
                    messageDigest = MessageDigest.getInstance("MD5");
                    messageDigest.reset();
                    messageDigest.update(String.valueOf(password).getBytes(Charset.forName("UTF8")));
                    final byte[] resultByte = messageDigest.digest();
                    final String result = new String(Hex.encodeHex(resultByte));
                    System.out.println("md5 password = "+ result);
                    String userPassword1=String.valueOf(password);
                    String key= userPassword1.substring(0, 1) + mobile.substring(4, 8) + userPassword1.substring(1, 2) + 
                            email.substring(0, 2) + userPassword1.substring(2, 3) + email.substring(0, 4) + 
                            userPassword1.substring(1, 2) + mobile.substring(4, 6) + 
                            (Math.floor(9000000000.0D * Math.random()) + 1000000000L);
                    pr.setString(1, firstName);
                    pr.setString(2, lastName);
                    pr.setString(3, otherName);
                    pr.setString(4, email);
                    pr.setString(5, mobile);
                    pr.setString(6, result);
                    pr.setInt(7, securityQuestion);
                    pr.setString(8, securityAnswer);
                    pr.setString(9, key);
                    pr.setString(10, staffId);
                    pr.setInt(11, userType);
                    
                    if(fileId>-1)
                    {
                        pr.setInt(12, fileId);
                    }

                    int shopItemCount;
                    shopItemCount=pr.executeUpdate();
                    shopItemCount=0;
                    ResultSet res = pr.getGeneratedKeys();
                    System.out.println("SQL to create user=" + res.getStatement().toString());
                        while (res.next()){
                            shopItemCount=(int)res.getInt(1);}
                    if(shopItemCount>0)
                    {
                        processResult.put("success", true);
                        processResult.put("message", "User Account created successfully!");
                        processResult.put("operation", "Create/Update User Account...");
                    }
                    else
                    {
                        processResult.put("success", false);
                        processResult.put("message", "Error creating user account successful!");
                        processResult.put("operation", "Create/Update User Account...");
                    }
                }
                //update items
                else
                {
                    System.out.println("Edit Process");
                    int fileId=-1;
                    String sql="";
                    if(fileSelectedPath==null)
                    {
                        sql="UPDATE shop_items SET `qr_code` = ?, `title` = ?, `price` = ?, `details` = ?, `type` = ?, `status` = ?, `dateUploaded` = NOW() WHERE `id` = " + this.editDetails.get("id");
                    }
                    else
                    {
                        uniqIdImage=UUID.randomUUID().toString();
                        try {
                            FileInputStream fileInputStream=new FileInputStream(new File(fileSelectedPath));
                            byte[] buffer = new byte[fileInputStream.available()];
                            int bytesRead = fileInputStream.read(buffer, 0, fileInputStream.available());
                            int bytesAvailable;
                            int maxBufferSize=2*1048576;
                            FileOutputStream fileOutputsteam=new FileOutputStream(new File(savePath + "images/" + uniqIdImage));

                            int count=0;
                            while (bytesRead > 0) {
                                fileOutputsteam.write(buffer, count++, 1);
                                bytesRead--;
                            }
                            fileInputStream.close();
                            fileOutputsteam.flush();
                            fileOutputsteam.close();
                        } catch (FileNotFoundException ex) {
                            Logger.getLogger(AddNewItem.class.getName()).log(Level.SEVERE, null, ex);
                            processResult.put("success", false);
                            processResult.put("message", "Process failed. Try again");
                            processResult.put("operation", "Create/Update User Account...");
                        }
                        catch (IOException ex)
                        {
                            Logger.getLogger(AddNewItem.class.getName()).log(Level.SEVERE, null, ex);
                            processResult.put("success", false);
                            processResult.put("message", "Process failed. Try again");
                            processResult.put("operation", "Create/Update User Account...");
                        }

                        System.out.println("appAccess.getAccessKey()=" + appAccess.getAccessKey());
                        pr=con.prepareStatement("INSERT INTO files (`unique_id`, `fileName`, `source_id`, `dateUploaded`, `status`, `receipient_id`) VALUES "
                                + "(?, ?, (SELECT `id` FROM user_profile where `key` = ?), NOW(), ?, "
                                + "(SELECT `id` FROM user_profile where `key` = ?))", Statement.RETURN_GENERATED_KEYS);

                        pr.setString(1, uniqIdImage);
                        pr.setString(2, fileSelected.getName());
                        pr.setString(3, appAccess.getAccessKey());
                        pr.setInt(4, 1);
                        pr.setString(5, appAccess.getAccessKey());
                        int addCount = pr.executeUpdate();

                        ResultSet res = pr.getGeneratedKeys();
                        while (res.next()){
                            fileId=res.getInt("id");}

                        if(fileId>-1)
                        {
                            sql="UPDATE shop_items SET `first_name` = ?, `last_name` = ?, `other_name` = ?, `email_address` = ?, "
                                    + "`mobile_number` = ?, `userTypeId` = ?, `dateUpdated` = NOW(), `fileId` = ? WHERE `id` = "  + 
                                    this.editDetails.get("id");

                        }
                        else
                        {
                            sql="UPDATE shop_items SET `first_name` = ?, `last_name` = ?, `other_name` = ?, `email_address` = ?, "
                                    + "`mobile_number` = ?, `userTypeId` = ?, `dateUpdated` = NOW() WHERE `id` = "  + 
                                    this.editDetails.get("id");
                        }
                    }
                    pr=con.prepareStatement(sql);
                    pr.setString(1, firstName);
                    pr.setString(2, lastName);
                    pr.setString(3, otherName);
                    pr.setString(4, email);
                    pr.setString(5, mobile);
                    pr.setInt(6, userType);
                    
                    if(fileId>-1)
                    {
                        pr.setInt(7, fileId);
                    }

                    int shopItemCount = pr.executeUpdate();



                    if(shopItemCount>0)
                    {
                        System.out.println("Successful");
                        processResult.put("success", true);
                        processResult.put("message", "Update successful!");
                        processResult.put("operation", "Create/Update User Account...");
                    }
                    else
                    {
                        System.out.println("Failed");
                        processResult.put("success", false);
                        processResult.put("message", "Update failed. Try again");
                        processResult.put("operation", "Create/Update User Account...");
                    }
                }
            }                                       catch (NoSuchAlgorithmException ex) {
                                                        Logger.getLogger(NewUser.class.getName()).log(Level.SEVERE, null, ex);
                                                    } catch (SQLException ex) {
                Logger.getLogger(AddNewItem.class.getName()).log(Level.SEVERE, null, ex);
                processResult.put("success", false);
                processResult.put("message", "Process failed. Try again");
                processResult.put("operation", "Create/Update User Account...");
            }
                        
                                                }
                                                else
                                                {
                                                        processResult.put("success", false);
                                                        processResult.put("message", "Select A security Question");
                                                        processResult.put("operation", "Create/Update User Account...");
                                                }
                                            }
                                            else
                                            {
                                                processResult.put("success", false);
                                                processResult.put("message", "Provide a security Answer");
                                                processResult.put("operation", "Create/Update User Account...");
                                            }
                                        }
                                        else
                                        {
                                            processResult.put("success", false);
                                            processResult.put("message", "Passwords do not match");
                                            processResult.put("operation", "Create/Update User Account...");
                                        }
                                    }
                                    else
                                    {
                                        processResult.put("success", false);
                                        processResult.put("message", "Retype your password in the confirmation password");
                                        processResult.put("operation", "Create/Update User Account...");
                                    }
                                }
                                else
                                {
                                    processResult.put("success", false);
                                    processResult.put("message", "Provide a password. Passwords should exceed 6 characters");
                                    processResult.put("operation", "Create/Update User Account...");
                                }
                            }
                            else
                            {
                                processResult.put("success", false);
                                processResult.put("message", "Administrators email Address should be provided");
                                processResult.put("operation", "Create/Update User Account...");
                            }
                        }
                        else
                        {
                            processResult.put("success", false);
                            processResult.put("message", "Administrators mobile number should be provided");
                            processResult.put("operation", "Create/Update User Account...");
                        }
                    }
                    else
                    {
                        processResult.put("success", false);
                        processResult.put("message", "Provide Administrators last Name");
                        processResult.put("operation", "Create/Update User Account...");
                    }
                }
                else
                {
                    processResult.put("success", false);
                    processResult.put("message", "Provide Administrators First Name");
                    processResult.put("operation", "Create/Update User Account...");
                }
                    
            }
            else
            {
                processResult.put("success", false);
                processResult.put("message", "Provide gender of the user");
                processResult.put("operation", "Create/Update User Account...");
            }
        }
        else
        {
            processResult.put("success", false);
            processResult.put("message", "Provide the users category");
            processResult.put("operation", "Create/Update User Account...");
        }
        return processResult;
    }
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        // TODO add your handling code here:
        Hashtable h1=new Hashtable();
        h1=addNewUserProcess(this.con, this.mysql, this.appAccess, this.savePath);
        
        
          this.hs.displayProcessMessage(h1);
        //}
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    // End of variables declaration//GEN-END:variables
}
